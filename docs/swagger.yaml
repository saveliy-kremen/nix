basePath: /
definitions:
  main.Comment:
    properties:
      body:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      postId:
        type: integer
    type: object
  main.Post:
    properties:
      body:
        type: string
      id:
        type: integer
      title:
        type: string
      userId:
        type: integer
    type: object
  main.Response:
    properties:
      message:
        type: string
    type: object
host: localhost:80
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a echo post + comments server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Echo Swagger API
  version: "1.0"
paths:
  /comments:
    get:
      description: Get comments based on given Post ID.
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Header for xml output
        in: header
        name: Accept-xml
        type: string
      produces:
      - application/json
      - text/xml
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/main.Comment'
              type: array
            type: array
      summary: Get comments based on given Post ID.
      tags:
      - Comments
  /comments/:
    delete:
      description: Delete comment.
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
      summary: Delete comment.
      tags:
      - Comments
    post:
      description: Save comment.
      parameters:
      - description: Post ID
        in: formData
        name: postId
        required: true
        type: number
      - description: Comment name
        in: formData
        name: name
        required: true
        type: string
      - description: Comment email
        in: formData
        name: email
        required: true
        type: string
      - description: Comment body
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Response'
      summary: Save comment.
      tags:
      - Comments
    put:
      description: Update comment.
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Comment name
        in: formData
        name: name
        required: true
        type: string
      - description: Comment email
        in: formData
        name: email
        required: true
        type: string
      - description: Comment body
        in: formData
        name: body
        required: true
        type: string
      produces:
      - application/json
      - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Comment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
      summary: Update comment.
      tags:
      - Comments
  /posts:
    get:
      description: Get posts.
      parameters:
      - description: Header for xml output
        in: header
        name: Accept-xml
        type: string
      produces:
      - application/json
      - text/xml
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/main.Post'
              type: array
            type: array
      summary: Get all posts.
      tags:
      - Posts
  /posts/:
    delete:
      description: Delete post.
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
      summary: Delete post.
      tags:
      - Posts
    post:
      description: Save post.
      parameters:
      - description: Post title
        in: formData
        name: title
        required: true
        type: string
      - description: Post body
        in: formData
        name: body
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Response'
      summary: Save post.
      tags:
      - Posts
    put:
      description: Update post.
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Post title
        in: formData
        name: title
        required: true
        type: string
      - description: Post body
        in: formData
        name: body
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
      summary: Update post.
      tags:
      - Posts
  /posts/{id}:
    get:
      description: Get post based on given ID.
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Header for xml output
        in: header
        name: Accept-xml
        type: string
      produces:
      - application/json
      - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Post'
      summary: Get post by id.
      tags:
      - Posts
schemes:
- http
swagger: "2.0"
